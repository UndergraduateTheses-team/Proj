name: Build and Deploy (No GKE)

on:
  workflow_dispatch:

jobs:
  build-and-metrics:
    name: Build and Push Metrics
    runs-on: ubuntu-latest

    env:
      IMAGE_FE: fe
      IMAGE_BE: be
      IMAGE_TAG: latest
      GAR_REPO: docker-registry
      PUSHGATEWAY_URL: http://pushgateway.monitoring.svc.cluster.local:9091

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: CI/CD started
        run: |
          echo "cicd_pipeline_status{stage=\"start\"} 1" | \
          curl --data-binary @- ${{ env.PUSHGATEWAY_URL }}/metrics/job/deploy_local

      - name: Build Frontend Docker image
        run: |
          docker build \
            -t "${{ env.IMAGE_FE }}:${{ env.IMAGE_TAG }}" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            -f Dockerfile.fe .

      - name: Build Backend Docker image
        run: |
          docker build \
            -t "${{ env.IMAGE_BE }}:${{ env.IMAGE_TAG }}" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            -f Dockerfile.be .

      - name: Install jq for Trivy parsing
        run: |
          sudo apt-get update && sudo apt-get install -y jq

      - name: Install Trivy and run security scan
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh
          ./bin/trivy image --severity CRITICAL,HIGH --format json --output trivy-report-fe.json "${{ env.IMAGE_FE }}:${{ env.IMAGE_TAG }}"
          ./bin/trivy image --severity CRITICAL,HIGH --format json --output trivy-report-be.json "${{ env.IMAGE_BE }}:${{ env.IMAGE_TAG }}"

      - name: Push Trivy Metrics to Pushgateway
        run: |
          FE_HIGH=$(jq '[.Results[].Vulnerabilities[] | select(.Severity == "HIGH")] | length' trivy-report-fe.json)
          FE_CRITICAL=$(jq '[.Results[].Vulnerabilities[] | select(.Severity == "CRITICAL")] | length' trivy-report-fe.json)
          BE_HIGH=$(jq '[.Results[].Vulnerabilities[] | select(.Severity == "HIGH")] | length' trivy-report-be.json)
          BE_CRITICAL=$(jq '[.Results[].Vulnerabilities[] | select(.Severity == "CRITICAL")] | length' trivy-report-be.json)

          echo "trivy_vulnerabilities{component=\"frontend\",severity=\"HIGH\"} $FE_HIGH" | curl --data-binary @- ${{ env.PUSHGATEWAY_URL }}/metrics/job/trivy_fe
          echo "trivy_vulnerabilities{component=\"frontend\",severity=\"CRITICAL\"} $FE_CRITICAL" | curl --data-binary @- ${{ env.PUSHGATEWAY_URL }}/metrics/job/trivy_fe
          echo "trivy_vulnerabilities{component=\"backend\",severity=\"HIGH\"} $BE_HIGH" | curl --data-binary @- ${{ env.PUSHGATEWAY_URL }}/metrics/job/trivy_be
          echo "trivy_vulnerabilities{component=\"backend\",severity=\"CRITICAL\"} $BE_CRITICAL" | curl --data-binary @- ${{ env.PUSHGATEWAY_URL }}/metrics/job/trivy_be

      - name: CI/CD success
        if: success()
        run: |
          echo "cicd_pipeline_status{stage=\"success\"} 1" | \
          curl --data-binary @- ${{ env.PUSHGATEWAY_URL }}/metrics/job/deploy_local

      - name: CI/CD failed
        if: failure()
        run: |
          echo "cicd_pipeline_status{stage=\"fail\"} 1" | \
          curl --data-binary @- ${{ env.PUSHGATEWAY_URL }}/metrics/job/deploy_local
