name: Build and Deploy to Cloud Run

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - main

jobs:
  build-publish-deploy:
    name: Build, Scan, Push, and Deploy
    runs-on: ubuntu-latest
    environment: development

    env:
      IMAGE_FE: fe
      IMAGE_BE: be
      IMAGE_TAG: latest
      GAR_ZONE: asia-southeast1
      GAR_REPO: docker-registry
      REGION: asia-southeast1

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate with Google Cloud
        id: auth
        uses: google-github-actions/auth@v2.1.7
        with:
          credentials_json: '${{ secrets.GKE_SA_KEY }}'

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://${{ env.GAR_ZONE }}-docker.pkg.dev

      - name: Build Frontend Docker image
        run: |
          docker build \
            --tag "${{ env.GAR_ZONE }}-docker.pkg.dev/${{ secrets.GKE_PROJECT }}/${{ env.GAR_REPO }}/${{ env.IMAGE_FE }}:${{ env.IMAGE_TAG }}" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            --build-arg PORT=${{ secrets.PORT }} \
            -f Dockerfile.fe .

      - name: Build Backend Docker image
        run: |
          docker build \
            --tag "${{ env.GAR_ZONE }}-docker.pkg.dev/${{ secrets.GKE_PROJECT }}/${{ env.GAR_REPO }}/${{ env.IMAGE_BE }}:${{ env.IMAGE_TAG }}" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            --build-arg SERVER_UPLOAD_URL=${{ secrets.SERVER_UPLOAD_URL }} \
            --build-arg MONGODB_URI=${{ secrets.MONGODB_URI }} \
            -f Dockerfile.be .

      - name: Trivy Security Scan
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh
          ./bin/trivy image --severity CRITICAL,HIGH --format json --output trivy-report-fe.json \
            "${{ env.GAR_ZONE }}-docker.pkg.dev/${{ secrets.GKE_PROJECT }}/${{ env.GAR_REPO }}/${{ env.IMAGE_FE }}:${{ env.IMAGE_TAG }}"
          ./bin/trivy image --severity CRITICAL,HIGH --format json --output trivy-report-be.json \
            "${{ env.GAR_ZONE }}-docker.pkg.dev/${{ secrets.GKE_PROJECT }}/${{ env.GAR_REPO }}/${{ env.IMAGE_BE }}:${{ env.IMAGE_TAG }}"

      - name: Upload Frontend Trivy Report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-scan-report-frontend
          path: trivy-report-fe.json

      - name: Upload Backend Trivy Report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-scan-report-backend
          path: trivy-report-be.json

      - name: Push Docker images to Artifact Registry
        run: |
          docker push "${{ env.GAR_ZONE }}-docker.pkg.dev/${{ secrets.GKE_PROJECT }}/${{ env.GAR_REPO }}/${{ env.IMAGE_FE }}:${{ env.IMAGE_TAG }}"
          docker push "${{ env.GAR_ZONE }}-docker.pkg.dev/${{ secrets.GKE_PROJECT }}/${{ env.GAR_REPO }}/${{ env.IMAGE_BE }}:${{ env.IMAGE_TAG }}"

